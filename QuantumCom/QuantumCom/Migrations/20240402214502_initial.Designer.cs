// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace QuantumCom.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240402214502_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Billing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Billings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 200m,
                            CustId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 500m,
                            CustId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 1299m,
                            CustId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 350m,
                            CustId = 4
                        },
                        new
                        {
                            Id = 5,
                            Amount = 699m,
                            CustId = 5
                        });
                });

            modelBuilder.Entity("Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CCV")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PlansId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlansId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CCV = 111,
                            CardNumber = "0000000000000000",
                            CardType = "Visa",
                            Email = "JohnTest@example.com",
                            ExpirationDate = new DateTime(2010, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Test"
                        },
                        new
                        {
                            Id = 2,
                            CCV = 123,
                            CardNumber = "1234123412341234",
                            CardType = "Mastercard",
                            Email = "Arod@example.com",
                            ExpirationDate = new DateTime(2024, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Aaron",
                            LastName = "Rodgers"
                        },
                        new
                        {
                            Id = 3,
                            CCV = 111,
                            CardNumber = "9999999999999999",
                            CardType = "Amex",
                            Email = "KimMC123@example.com",
                            ExpirationDate = new DateTime(2026, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kim",
                            LastName = "Mccrary"
                        },
                        new
                        {
                            Id = 4,
                            CCV = 421,
                            CardNumber = "8888888888888888",
                            CardType = "Discover",
                            Email = "MarcusPeters@example.com",
                            ExpirationDate = new DateTime(2023, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marcus",
                            LastName = "Peters"
                        },
                        new
                        {
                            Id = 5,
                            CCV = 232,
                            CardNumber = "4321432143214321",
                            CardType = "Apple",
                            Email = "LTaylor@example.com",
                            ExpirationDate = new DateTime(2027, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Lorenzo",
                            LastName = "Taylot"
                        });
                });

            modelBuilder.Entity("Entities.CustomerPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("CustomerPlans");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        },
                        new
                        {
                            Id = 5
                        });
                });

            modelBuilder.Entity("Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "CustId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustId = 1,
                            Name = "Iphone 14",
                            Number = "1111111111"
                        },
                        new
                        {
                            Id = 2,
                            CustId = 1,
                            Name = "Iphone 12 SE",
                            Number = "9012219981"
                        },
                        new
                        {
                            Id = 3,
                            CustId = 2,
                            Name = "Samsung Galaxy S22 Ultra",
                            Number = "9332910021"
                        },
                        new
                        {
                            Id = 4,
                            CustId = 3,
                            Name = "Motorola Edge",
                            Number = "4121229921"
                        },
                        new
                        {
                            Id = 5,
                            CustId = 4,
                            Name = "Iphone 11 S",
                            Number = "3329990192"
                        },
                        new
                        {
                            Id = 6,
                            CustId = 5,
                            Name = "Blackberry OG",
                            Number = "91119119111"
                        });
                });

            modelBuilder.Entity("Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerPlanId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceLimit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerPlanId");

                    b.ToTable("Plans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceLimit = 2,
                            Name = "Basic",
                            Price = 100m
                        },
                        new
                        {
                            Id = 2,
                            DeviceLimit = 5,
                            Name = "Family",
                            Price = 400m
                        },
                        new
                        {
                            Id = 3,
                            DeviceLimit = 15,
                            Name = "Unlimited",
                            Price = 700m
                        });
                });

            modelBuilder.Entity("Entities.Customer", b =>
                {
                    b.HasOne("Entities.CustomerPlan", "Plans")
                        .WithMany()
                        .HasForeignKey("PlansId");

                    b.Navigation("Plans");
                });

            modelBuilder.Entity("Entities.Device", b =>
                {
                    b.HasOne("Entities.Customer", null)
                        .WithMany("Devices")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("Entities.Plan", b =>
                {
                    b.HasOne("Entities.CustomerPlan", null)
                        .WithMany("Plans")
                        .HasForeignKey("CustomerPlanId");
                });

            modelBuilder.Entity("Entities.Customer", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Entities.CustomerPlan", b =>
                {
                    b.Navigation("Plans");
                });
#pragma warning restore 612, 618
        }
    }
}
